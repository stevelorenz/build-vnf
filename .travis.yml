os: linux
dist: focal
language: cpp

services:
  - docker

branches:
  only:
    - master
    - dev
    - dev-zuo
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

# TODO: Enable CI after finishing the new ffpp2.
#
# before_script:
#   - sudo apt-get install -y linux-headers-$(uname -r)
#   - cd ${TRAVIS_BUILD_DIR}/ffpp/util
#   - sudo bash ./setup_devtools.sh && sudo bash ./setup_host_os.sh
#   # Build Trex image
#   - cd ${TRAVIS_BUILD_DIR}/pktgen/trex/
#   - bash ./build_docker_image.sh
#   # Build FFPP library.
#   - cd ${TRAVIS_BUILD_DIR}/ffpp
#   - docker build -t ffpp-dev .
#   - docker run -it -d --privileged -v /sys/devices/system/node:/sys/devices/system/node --name test-ffpp ffpp-dev /bin/bash
# 
# script:
#   # Build XDP programs on the host OS.
#   - cd ${TRAVIS_BUILD_DIR}/ffpp/kern
#   - make clean && make
#   # Build all examples, tests of FFPP library.
#   - docker exec -i test-ffpp bash -c "cd /ffpp/user/ && bash ./build.sh -a"
#   # Run unit tests.
#   - docker exec -i test-ffpp sysctl -w vm.nr_hugepages=1024
#   - docker exec -i test-ffpp sh -c 'echo 1024 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages'
#   - docker exec -i test-ffpp mkdir /mnt/huge
#   - docker exec -i test-ffpp mount -t hugetlbfs nodev /mnt/huge
#   - docker exec -i test-ffpp bash -c "cd /ffpp/user/ && make run-tests"
